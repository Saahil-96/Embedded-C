
cv.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000170  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000002e  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000398  00000000  00000000  00000212  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000111  00000000  00000000  000005aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000356  00000000  00000000  000006bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  00000a14  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000d3  00000000  00000000  00000a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000610  00000000  00000000  00000b17  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000090  00000000  00000000  00001127  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 3c 00 	call	0x78	; 0x78 <main>
  64:	0c 94 b6 00 	jmp	0x16c	; 0x16c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <timer_ctc_init>:
void timer_ctc_init()
{ 
TCCR0|=(1<<WGM01)|(1<<COM00)|(1<<CS01);
  6c:	83 b7       	in	r24, 0x33	; 51
  6e:	8a 61       	ori	r24, 0x1A	; 26
  70:	83 bf       	out	0x33, r24	; 51
DDRB=0B00001000;
  72:	88 e0       	ldi	r24, 0x08	; 8
  74:	87 bb       	out	0x17, r24	; 23
}
  76:	08 95       	ret

00000078 <main>:
#include <avr/io.h>
#include <util/delay.h>
#include "speaker.h"

void main()
{	timer_ctc_init();
  78:	cf 92       	push	r12
  7a:	df 92       	push	r13
  7c:	ef 92       	push	r14
  7e:	ff 92       	push	r15
  80:	0f 93       	push	r16
  82:	1f 93       	push	r17
void timer_ctc_init()
{ 
TCCR0|=(1<<WGM01)|(1<<COM00)|(1<<CS01);
  84:	83 b7       	in	r24, 0x33	; 51
  86:	8a 61       	ori	r24, 0x1A	; 26
  88:	83 bf       	out	0x33, r24	; 51
DDRB=0B00001000;
  8a:	88 e0       	ldi	r24, 0x08	; 8
  8c:	87 bb       	out	0x17, r24	; 23

    DDRA=0x00;
  8e:	1a ba       	out	0x1a, r1	; 26
	PORTA=0XFF;
  90:	8f ef       	ldi	r24, 0xFF	; 255
  92:	8b bb       	out	0x1b, r24	; 27
    DDRD=0xff;
  94:	81 bb       	out	0x11, r24	; 17
	while (1)
	{
		
		PORTD=0b00001110;
  96:	3e e0       	ldi	r19, 0x0E	; 14
  98:	c3 2e       	mov	r12, r19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  9a:	44 ec       	ldi	r20, 0xC4	; 196
  9c:	59 e0       	ldi	r21, 0x09	; 9
		_delay_ms(10);
		if((PINA&0b00000001)==0)
		{
				 OCR0=59;
  9e:	2b e3       	ldi	r18, 0x3B	; 59
  a0:	d2 2e       	mov	r13, r18
  a2:	29 e1       	ldi	r18, 0x19	; 25
  a4:	30 e0       	ldi	r19, 0x00	; 0
		}
		if((PINA&0b00000010)==0)
		{
		//	while ((PINA&0b00000010)==0)
		//	{
			OCR0=52;
  a6:	94 e3       	ldi	r25, 0x34	; 52
  a8:	e9 2e       	mov	r14, r25
		}
		if((PINA&0b00000100)==0)
		{
		//while ((PINA&0b00000100)==0)
		//{
		OCR0=46;
  aa:	8e e2       	ldi	r24, 0x2E	; 46
  ac:	f8 2e       	mov	r15, r24
		}
		if((PINA&0b00001000)==0)
		{
		//	while ((PINA&0b00001000)==0)
			//{ 
			OCR0=44;
  ae:	0c e2       	ldi	r16, 0x2C	; 44
			_delay_ms(1000);
		//	}
		//	return(3);
		}
		PORTD=0b00001101;
  b0:	1d e0       	ldi	r17, 0x0D	; 13
		_delay_ms(10);
		if((PINA&0b00000001)==0)
		{
		//	while ((PINA&0b00000001)==0)
		//	{ 
			 OCR0=38;
  b2:	b6 e2       	ldi	r27, 0x26	; 38
		}
		if((PINA&0b00000010)==0)
		{
		//	while ((PINA&0b00000010)==0)
		//	{
			OCR0=34;
  b4:	a2 e2       	ldi	r26, 0x22	; 34
		}
		if((PINA&0b00000100)==0)
		{
		//	while ((PINA&0b00000100)==0)
			//{
			OCR0=30;
  b6:	7e e1       	ldi	r23, 0x1E	; 30
		}
		if((PINA&0b00001000)==0)
		{
			//while ((PINA&0b00001000)==0)
			//{
			OCR0=28;
  b8:	6c e1       	ldi	r22, 0x1C	; 28
	PORTA=0XFF;
    DDRD=0xff;
	while (1)
	{
		
		PORTD=0b00001110;
  ba:	c2 ba       	out	0x12, r12	; 18
  bc:	ca 01       	movw	r24, r20
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <main+0x46>
		_delay_ms(10);
		if((PINA&0b00000001)==0)
  c2:	c8 99       	sbic	0x19, 0	; 25
  c4:	08 c0       	rjmp	.+16     	; 0xd6 <main+0x5e>
		{
				 OCR0=59;
  c6:	dc be       	out	0x3c, r13	; 60
  c8:	80 e1       	ldi	r24, 0x10	; 16
  ca:	97 e2       	ldi	r25, 0x27	; 39
  cc:	f9 01       	movw	r30, r18
  ce:	31 97       	sbiw	r30, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <main+0x56>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  d2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  d4:	d9 f7       	brne	.-10     	; 0xcc <main+0x54>
				 _delay_ms(1000);
				 //return(0);
		}
		if((PINA&0b00000010)==0)
  d6:	c9 99       	sbic	0x19, 1	; 25
  d8:	08 c0       	rjmp	.+16     	; 0xea <main+0x72>
		{
		//	while ((PINA&0b00000010)==0)
		//	{
			OCR0=52;
  da:	ec be       	out	0x3c, r14	; 60
  dc:	80 e1       	ldi	r24, 0x10	; 16
  de:	97 e2       	ldi	r25, 0x27	; 39
  e0:	f9 01       	movw	r30, r18
  e2:	31 97       	sbiw	r30, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <main+0x6a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  e6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  e8:	d9 f7       	brne	.-10     	; 0xe0 <main+0x68>
			_delay_ms(1000);
		//	}
		//	return(1);
		}
		if((PINA&0b00000100)==0)
  ea:	ca 99       	sbic	0x19, 2	; 25
  ec:	08 c0       	rjmp	.+16     	; 0xfe <main+0x86>
		{
		//while ((PINA&0b00000100)==0)
		//{
		OCR0=46;
  ee:	fc be       	out	0x3c, r15	; 60
  f0:	80 e1       	ldi	r24, 0x10	; 16
  f2:	97 e2       	ldi	r25, 0x27	; 39
  f4:	f9 01       	movw	r30, r18
  f6:	31 97       	sbiw	r30, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <main+0x7e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  fa:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  fc:	d9 f7       	brne	.-10     	; 0xf4 <main+0x7c>
		_delay_ms(1000);
	//	}
	//	return(2);
		}
		if((PINA&0b00001000)==0)
  fe:	cb 99       	sbic	0x19, 3	; 25
 100:	08 c0       	rjmp	.+16     	; 0x112 <main+0x9a>
		{
		//	while ((PINA&0b00001000)==0)
			//{ 
			OCR0=44;
 102:	0c bf       	out	0x3c, r16	; 60
 104:	80 e1       	ldi	r24, 0x10	; 16
 106:	97 e2       	ldi	r25, 0x27	; 39
 108:	f9 01       	movw	r30, r18
 10a:	31 97       	sbiw	r30, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <main+0x92>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 10e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 110:	d9 f7       	brne	.-10     	; 0x108 <main+0x90>
			_delay_ms(1000);
		//	}
		//	return(3);
		}
		PORTD=0b00001101;
 112:	12 bb       	out	0x12, r17	; 18
 114:	ca 01       	movw	r24, r20
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <main+0x9e>
		_delay_ms(10);
		if((PINA&0b00000001)==0)
 11a:	c8 99       	sbic	0x19, 0	; 25
 11c:	08 c0       	rjmp	.+16     	; 0x12e <main+0xb6>
		{
		//	while ((PINA&0b00000001)==0)
		//	{ 
			 OCR0=38;
 11e:	bc bf       	out	0x3c, r27	; 60
 120:	80 e1       	ldi	r24, 0x10	; 16
 122:	97 e2       	ldi	r25, 0x27	; 39
 124:	f9 01       	movw	r30, r18
 126:	31 97       	sbiw	r30, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <main+0xae>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 12a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 12c:	d9 f7       	brne	.-10     	; 0x124 <main+0xac>
			 _delay_ms(1000);
		//	}
		//	return(4);
		}
		if((PINA&0b00000010)==0)
 12e:	c9 99       	sbic	0x19, 1	; 25
 130:	08 c0       	rjmp	.+16     	; 0x142 <main+0xca>
		{
		//	while ((PINA&0b00000010)==0)
		//	{
			OCR0=34;
 132:	ac bf       	out	0x3c, r26	; 60
 134:	80 e1       	ldi	r24, 0x10	; 16
 136:	97 e2       	ldi	r25, 0x27	; 39
 138:	f9 01       	movw	r30, r18
 13a:	31 97       	sbiw	r30, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <main+0xc2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 13e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 140:	d9 f7       	brne	.-10     	; 0x138 <main+0xc0>
			_delay_ms(1000);
		//	}
		//	return(5);
		}
		if((PINA&0b00000100)==0)
 142:	ca 99       	sbic	0x19, 2	; 25
 144:	08 c0       	rjmp	.+16     	; 0x156 <main+0xde>
		{
		//	while ((PINA&0b00000100)==0)
			//{
			OCR0=30;
 146:	7c bf       	out	0x3c, r23	; 60
 148:	80 e1       	ldi	r24, 0x10	; 16
 14a:	97 e2       	ldi	r25, 0x27	; 39
 14c:	f9 01       	movw	r30, r18
 14e:	31 97       	sbiw	r30, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <main+0xd6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 152:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 154:	d9 f7       	brne	.-10     	; 0x14c <main+0xd4>
			_delay_ms(1000);
			//}
			//return(6);
		}
		if((PINA&0b00001000)==0)
 156:	cb 99       	sbic	0x19, 3	; 25
 158:	b0 cf       	rjmp	.-160    	; 0xba <main+0x42>
		{
			//while ((PINA&0b00001000)==0)
			//{
			OCR0=28;
 15a:	6c bf       	out	0x3c, r22	; 60
 15c:	80 e1       	ldi	r24, 0x10	; 16
 15e:	97 e2       	ldi	r25, 0x27	; 39
 160:	f9 01       	movw	r30, r18
 162:	31 97       	sbiw	r30, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <main+0xea>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 166:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 168:	d9 f7       	brne	.-10     	; 0x160 <main+0xe8>
 16a:	a7 cf       	rjmp	.-178    	; 0xba <main+0x42>

0000016c <_exit>:
 16c:	f8 94       	cli

0000016e <__stop_program>:
 16e:	ff cf       	rjmp	.-2      	; 0x16e <__stop_program>
