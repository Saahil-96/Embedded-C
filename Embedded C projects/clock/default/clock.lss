
clock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000252  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800060  00800060  000002c6  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  000002c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000007d  00000000  00000000  000002e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000002c4  00000000  00000000  00000363  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000010e  00000000  00000000  00000627  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000485  00000000  00000000  00000735  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000d0  00000000  00000000  00000bbc  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000ca  00000000  00000000  00000c8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000138  00000000  00000000  00000d56  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 72 00 	call	0xe4	; 0xe4 <main>
  74:	0c 94 27 01 	jmp	0x24e	; 0x24e <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <hr0>:
void min();
int count;

void hr0()
  {
      PORTB=0b00111111;
  7c:	8f e3       	ldi	r24, 0x3F	; 63
  7e:	88 bb       	out	0x18, r24	; 24
   }
  80:	08 95       	ret

00000082 <hr1>:
void hr1()
  {
      PORTB=0b00000110;
  82:	86 e0       	ldi	r24, 0x06	; 6
  84:	88 bb       	out	0x18, r24	; 24
   }
  86:	08 95       	ret

00000088 <hr2>:
void hr2()
  {
      PORTB=0b01011011;
  88:	8b e5       	ldi	r24, 0x5B	; 91
  8a:	88 bb       	out	0x18, r24	; 24
    }
  8c:	08 95       	ret

0000008e <hr3>:
void hr3()
  {
      PORTB=0b01001111;
  8e:	8f e4       	ldi	r24, 0x4F	; 79
  90:	88 bb       	out	0x18, r24	; 24
    }
  92:	08 95       	ret

00000094 <hr4>:
void hr4()
  {
	  PORTB=0b01100110;
  94:	86 e6       	ldi	r24, 0x66	; 102
  96:	88 bb       	out	0x18, r24	; 24
   }
  98:	08 95       	ret

0000009a <hr5>:
void hr5()
  {
	  PORTB=0b01101101;
  9a:	8d e6       	ldi	r24, 0x6D	; 109
  9c:	88 bb       	out	0x18, r24	; 24
   }
  9e:	08 95       	ret

000000a0 <hr6>:
void hr6()
  {
	  PORTB=0b01111101;
  a0:	8d e7       	ldi	r24, 0x7D	; 125
  a2:	88 bb       	out	0x18, r24	; 24
   }
  a4:	08 95       	ret

000000a6 <hr7>:
void hr7()
  {
	  PORTB=0b00000111;
  a6:	87 e0       	ldi	r24, 0x07	; 7
  a8:	88 bb       	out	0x18, r24	; 24
   }
  aa:	08 95       	ret

000000ac <hr8>:
void hr8()
  {
	  PORTB=0b01111111;
  ac:	8f e7       	ldi	r24, 0x7F	; 127
  ae:	88 bb       	out	0x18, r24	; 24
   }
  b0:	08 95       	ret

000000b2 <hr9>:
void hr9()
  {
	  PORTB=0b01101111;
  b2:	8f e6       	ldi	r24, 0x6F	; 111
  b4:	88 bb       	out	0x18, r24	; 24
   }
  b6:	08 95       	ret

000000b8 <min>:
void min ()
  { 
  b8:	20 e0       	ldi	r18, 0x00	; 0
  ba:	30 e0       	ldi	r19, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  bc:	49 e1       	ldi	r20, 0x19	; 25
  be:	50 e0       	ldi	r21, 0x00	; 0
  c0:	09 c0       	rjmp	.+18     	; 0xd4 <min+0x1c>
      for(count=0;count<=6;count++)
  c2:	8f ef       	ldi	r24, 0xFF	; 255
  c4:	9f ef       	ldi	r25, 0xFF	; 255
  c6:	fa 01       	movw	r30, r20
  c8:	31 97       	sbiw	r30, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <min+0x10>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  cc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ce:	d9 f7       	brne	.-10     	; 0xc6 <min+0xe>
  d0:	2f 5f       	subi	r18, 0xFF	; 255
  d2:	3f 4f       	sbci	r19, 0xFF	; 255
  d4:	27 30       	cpi	r18, 0x07	; 7
  d6:	31 05       	cpc	r19, r1
  d8:	a4 f3       	brlt	.-24     	; 0xc2 <min+0xa>
  da:	30 93 61 00 	sts	0x0061, r19
  de:	20 93 60 00 	sts	0x0060, r18
     {
    _delay_ms(10000);
   }
  }
  e2:	08 95       	ret

000000e4 <main>:

void main ()
{
  e4:	3f 92       	push	r3
  e6:	4f 92       	push	r4
  e8:	5f 92       	push	r5
  ea:	6f 92       	push	r6
  ec:	7f 92       	push	r7
  ee:	8f 92       	push	r8
  f0:	9f 92       	push	r9
  f2:	af 92       	push	r10
  f4:	bf 92       	push	r11
  f6:	cf 92       	push	r12
  f8:	df 92       	push	r13
  fa:	ef 92       	push	r14
  fc:	ff 92       	push	r15
  fe:	0f 93       	push	r16
 100:	1f 93       	push	r17
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 int a=0,b=0 ;
  DDRA=0b11111111;
 106:	8f ef       	ldi	r24, 0xFF	; 255
 108:	8a bb       	out	0x1a, r24	; 26
  DDRB=0b11111111;
 10a:	87 bb       	out	0x17, r24	; 23
  DDRC=0b11111111;
 10c:	84 bb       	out	0x14, r24	; 20
  DDRD=0b10000000;
 10e:	80 e8       	ldi	r24, 0x80	; 128
 110:	81 bb       	out	0x11, r24	; 17
 112:	00 e0       	ldi	r16, 0x00	; 0
 114:	10 e0       	ldi	r17, 0x00	; 0
 116:	c0 e0       	ldi	r28, 0x00	; 0
 118:	d0 e0       	ldi	r29, 0x00	; 0
  {
	  PORTB=0b01111111;
   }
void hr9()
  {
	  PORTB=0b01101111;
 11a:	8f e6       	ldi	r24, 0x6F	; 111
 11c:	68 2e       	mov	r6, r24
  {
	  PORTB=0b00000111;
   }
void hr8()
  {
	  PORTB=0b01111111;
 11e:	bf e7       	ldi	r27, 0x7F	; 127
 120:	7b 2e       	mov	r7, r27
  {
	  PORTB=0b01111101;
   }
void hr7()
  {
	  PORTB=0b00000111;
 122:	a7 e0       	ldi	r26, 0x07	; 7
 124:	8a 2e       	mov	r8, r26
  {
	  PORTB=0b01101101;
   }
void hr6()
  {
	  PORTB=0b01111101;
 126:	fd e7       	ldi	r31, 0x7D	; 125
 128:	9f 2e       	mov	r9, r31
  {
	  PORTB=0b01100110;
   }
void hr5()
  {
	  PORTB=0b01101101;
 12a:	ed e6       	ldi	r30, 0x6D	; 109
 12c:	de 2e       	mov	r13, r30
  {
      PORTB=0b01001111;
    }
void hr4()
  {
	  PORTB=0b01100110;
 12e:	76 e6       	ldi	r23, 0x66	; 102
 130:	a7 2e       	mov	r10, r23
  {
      PORTB=0b01011011;
    }
void hr3()
  {
      PORTB=0b01001111;
 132:	6f e4       	ldi	r22, 0x4F	; 79
 134:	b6 2e       	mov	r11, r22
  {
      PORTB=0b00000110;
   }
void hr2()
  {
      PORTB=0b01011011;
 136:	5b e5       	ldi	r21, 0x5B	; 91
 138:	e5 2e       	mov	r14, r21
  {
      PORTB=0b00111111;
   }
void hr1()
  {
      PORTB=0b00000110;
 13a:	46 e0       	ldi	r20, 0x06	; 6
 13c:	c4 2e       	mov	r12, r20
void min();
int count;

void hr0()
  {
      PORTB=0b00111111;
 13e:	3f e3       	ldi	r19, 0x3F	; 63
 140:	f3 2e       	mov	r15, r19
      else if (a==2)
	    {PORTA=0b01101101;}
       else if (a==3)
	     {PORTA=0b01111001;}
        else if (a==4)
	      {PORTA=0b01110010;}
 142:	22 e7       	ldi	r18, 0x72	; 114
 144:	32 2e       	mov	r3, r18
	 else if (a==1)
	   {PORTA=0b00110000;}
      else if (a==2)
	    {PORTA=0b01101101;}
       else if (a==3)
	     {PORTA=0b01111001;}
 146:	99 e7       	ldi	r25, 0x79	; 121
 148:	49 2e       	mov	r4, r25


	if (a==0)
	  {PORTA=0b00111111;}
	 else if (a==1)
	   {PORTA=0b00110000;}
 14a:	80 e3       	ldi	r24, 0x30	; 48
 14c:	58 2e       	mov	r5, r24
 14e:	01 c0       	rjmp	.+2      	; 0x152 <main+0x6e>
      PORTC=0b01111111;
           min();
      PORTC=0b01101111;
           min();
     a++;
     b++;	 	  
 150:	21 96       	adiw	r28, 0x01	; 1
  DDRC=0b11111111;
  DDRD=0b10000000;
   
   while(1)
    {
	if(b>=0 && b<6)
 152:	c6 30       	cpi	r28, 0x06	; 6
 154:	d1 05       	cpc	r29, r1
 156:	10 f4       	brcc	.+4      	; 0x15c <main+0x78>
void min();
int count;

void hr0()
  {
      PORTB=0b00111111;
 158:	f8 ba       	out	0x18, r15	; 24
 15a:	35 c0       	rjmp	.+106    	; 0x1c6 <main+0xe2>
   
   while(1)
    {
	if(b>=0 && b<6)
	  {hr0();}
	  else if(b>=6 && b<12)
 15c:	ce 01       	movw	r24, r28
 15e:	06 97       	sbiw	r24, 0x06	; 6
 160:	06 97       	sbiw	r24, 0x06	; 6
 162:	10 f4       	brcc	.+4      	; 0x168 <main+0x84>
  {
      PORTB=0b00111111;
   }
void hr1()
  {
      PORTB=0b00000110;
 164:	c8 ba       	out	0x18, r12	; 24
 166:	2f c0       	rjmp	.+94     	; 0x1c6 <main+0xe2>
    {
	if(b>=0 && b<6)
	  {hr0();}
	  else if(b>=6 && b<12)
	    {hr1();}
  	    else if(b>=12 && b<18)
 168:	ce 01       	movw	r24, r28
 16a:	0c 97       	sbiw	r24, 0x0c	; 12
 16c:	06 97       	sbiw	r24, 0x06	; 6
 16e:	10 f4       	brcc	.+4      	; 0x174 <main+0x90>
  {
      PORTB=0b00000110;
   }
void hr2()
  {
      PORTB=0b01011011;
 170:	e8 ba       	out	0x18, r14	; 24
 172:	29 c0       	rjmp	.+82     	; 0x1c6 <main+0xe2>
	  {hr0();}
	  else if(b>=6 && b<12)
	    {hr1();}
  	    else if(b>=12 && b<18)
	     {hr2();}
	     else if(b>=18 && b<24)
 174:	ce 01       	movw	r24, r28
 176:	42 97       	sbiw	r24, 0x12	; 18
 178:	06 97       	sbiw	r24, 0x06	; 6
 17a:	10 f4       	brcc	.+4      	; 0x180 <main+0x9c>
  {
      PORTB=0b01011011;
    }
void hr3()
  {
      PORTB=0b01001111;
 17c:	b8 ba       	out	0x18, r11	; 24
 17e:	23 c0       	rjmp	.+70     	; 0x1c6 <main+0xe2>
	    {hr1();}
  	    else if(b>=12 && b<18)
	     {hr2();}
	     else if(b>=18 && b<24)
	      {hr3();}
	      else if(b>=24 && b<30)
 180:	ce 01       	movw	r24, r28
 182:	48 97       	sbiw	r24, 0x18	; 24
 184:	06 97       	sbiw	r24, 0x06	; 6
 186:	10 f4       	brcc	.+4      	; 0x18c <main+0xa8>
  {
      PORTB=0b01001111;
    }
void hr4()
  {
	  PORTB=0b01100110;
 188:	a8 ba       	out	0x18, r10	; 24
 18a:	1d c0       	rjmp	.+58     	; 0x1c6 <main+0xe2>
	     {hr2();}
	     else if(b>=18 && b<24)
	      {hr3();}
	      else if(b>=24 && b<30)
	       {hr4();}
	      else if(b>=30 && b<36)
 18c:	ce 01       	movw	r24, r28
 18e:	4e 97       	sbiw	r24, 0x1e	; 30
 190:	06 97       	sbiw	r24, 0x06	; 6
 192:	10 f4       	brcc	.+4      	; 0x198 <main+0xb4>
  {
	  PORTB=0b01100110;
   }
void hr5()
  {
	  PORTB=0b01101101;
 194:	d8 ba       	out	0x18, r13	; 24
 196:	17 c0       	rjmp	.+46     	; 0x1c6 <main+0xe2>
	      {hr3();}
	      else if(b>=24 && b<30)
	       {hr4();}
	      else if(b>=30 && b<36)
	        {hr5();}
	       else if(b>=36 && b<42)
 198:	ce 01       	movw	r24, r28
 19a:	84 97       	sbiw	r24, 0x24	; 36
 19c:	06 97       	sbiw	r24, 0x06	; 6
 19e:	10 f4       	brcc	.+4      	; 0x1a4 <main+0xc0>
  {
	  PORTB=0b01101101;
   }
void hr6()
  {
	  PORTB=0b01111101;
 1a0:	98 ba       	out	0x18, r9	; 24
 1a2:	11 c0       	rjmp	.+34     	; 0x1c6 <main+0xe2>
	       {hr4();}
	      else if(b>=30 && b<36)
	        {hr5();}
	       else if(b>=36 && b<42)
	         {hr6();}
	        else if(b>=42 && b<48)
 1a4:	ce 01       	movw	r24, r28
 1a6:	8a 97       	sbiw	r24, 0x2a	; 42
 1a8:	06 97       	sbiw	r24, 0x06	; 6
 1aa:	10 f4       	brcc	.+4      	; 0x1b0 <main+0xcc>
  {
	  PORTB=0b01111101;
   }
void hr7()
  {
	  PORTB=0b00000111;
 1ac:	88 ba       	out	0x18, r8	; 24
 1ae:	0b c0       	rjmp	.+22     	; 0x1c6 <main+0xe2>
	        {hr5();}
	       else if(b>=36 && b<42)
	         {hr6();}
	        else if(b>=42 && b<48)
	          {hr7();}
	         else if(b>=48 && b<54)
 1b0:	ce 01       	movw	r24, r28
 1b2:	c0 97       	sbiw	r24, 0x30	; 48
 1b4:	06 97       	sbiw	r24, 0x06	; 6
 1b6:	10 f4       	brcc	.+4      	; 0x1bc <main+0xd8>
  {
	  PORTB=0b00000111;
   }
void hr8()
  {
	  PORTB=0b01111111;
 1b8:	78 ba       	out	0x18, r7	; 24
 1ba:	05 c0       	rjmp	.+10     	; 0x1c6 <main+0xe2>
	         {hr6();}
	        else if(b>=42 && b<48)
	          {hr7();}
	         else if(b>=48 && b<54)
	           {hr8();}
	          else if(b>=54)
 1bc:	c6 33       	cpi	r28, 0x36	; 54
 1be:	d1 05       	cpc	r29, r1
 1c0:	14 f0       	brlt	.+4      	; 0x1c6 <main+0xe2>
  {
	  PORTB=0b01111111;
   }
void hr9()
  {
	  PORTB=0b01101111;
 1c2:	68 ba       	out	0x18, r6	; 24
	          {hr7();}
	         else if(b>=48 && b<54)
	           {hr8();}
	          else if(b>=54)
	            {hr9();
				 b++;}
 1c4:	21 96       	adiw	r28, 0x01	; 1


	if (a==0)
 1c6:	01 15       	cp	r16, r1
 1c8:	11 05       	cpc	r17, r1
 1ca:	11 f4       	brne	.+4      	; 0x1d0 <main+0xec>
	  {PORTA=0b00111111;}
 1cc:	fb ba       	out	0x1b, r15	; 27
 1ce:	18 c0       	rjmp	.+48     	; 0x200 <main+0x11c>
	 else if (a==1)
 1d0:	01 30       	cpi	r16, 0x01	; 1
 1d2:	11 05       	cpc	r17, r1
 1d4:	11 f4       	brne	.+4      	; 0x1da <main+0xf6>
	   {PORTA=0b00110000;}
 1d6:	5b ba       	out	0x1b, r5	; 27
 1d8:	13 c0       	rjmp	.+38     	; 0x200 <main+0x11c>
      else if (a==2)
 1da:	02 30       	cpi	r16, 0x02	; 2
 1dc:	11 05       	cpc	r17, r1
 1de:	11 f4       	brne	.+4      	; 0x1e4 <main+0x100>
	    {PORTA=0b01101101;}
 1e0:	db ba       	out	0x1b, r13	; 27
 1e2:	0e c0       	rjmp	.+28     	; 0x200 <main+0x11c>
       else if (a==3)
 1e4:	03 30       	cpi	r16, 0x03	; 3
 1e6:	11 05       	cpc	r17, r1
 1e8:	11 f4       	brne	.+4      	; 0x1ee <main+0x10a>
	     {PORTA=0b01111001;}
 1ea:	4b ba       	out	0x1b, r4	; 27
 1ec:	09 c0       	rjmp	.+18     	; 0x200 <main+0x11c>
        else if (a==4)
 1ee:	04 30       	cpi	r16, 0x04	; 4
 1f0:	11 05       	cpc	r17, r1
 1f2:	11 f4       	brne	.+4      	; 0x1f8 <main+0x114>
	      {PORTA=0b01110010;}
 1f4:	3b ba       	out	0x1b, r3	; 27
 1f6:	04 c0       	rjmp	.+8      	; 0x200 <main+0x11c>
         else if (a==5)
 1f8:	05 30       	cpi	r16, 0x05	; 5
 1fa:	11 05       	cpc	r17, r1
 1fc:	09 f4       	brne	.+2      	; 0x200 <main+0x11c>
	       {PORTA=0b01011011;}
 1fe:	eb ba       	out	0x1b, r14	; 27
     
	  PORTC=0b00111111;
 200:	f5 ba       	out	0x15, r15	; 21
	       min();
 202:	0e 94 5c 00 	call	0xb8	; 0xb8 <min>
      PORTC=0b00000110;
 206:	c5 ba       	out	0x15, r12	; 21
           min();
 208:	0e 94 5c 00 	call	0xb8	; 0xb8 <min>
      PORTC=0b01011011;
 20c:	e5 ba       	out	0x15, r14	; 21
           min();
 20e:	0e 94 5c 00 	call	0xb8	; 0xb8 <min>
  	  PORTC=0b01001111;
 212:	b5 ba       	out	0x15, r11	; 21
           min();
 214:	0e 94 5c 00 	call	0xb8	; 0xb8 <min>
      PORTC=0b01100110;
 218:	a5 ba       	out	0x15, r10	; 21
           min();
 21a:	0e 94 5c 00 	call	0xb8	; 0xb8 <min>
      PORTC=0b01101101;
 21e:	d5 ba       	out	0x15, r13	; 21
           min();
 220:	0e 94 5c 00 	call	0xb8	; 0xb8 <min>
      PORTC=0b01111101;
 224:	95 ba       	out	0x15, r9	; 21
           min();
 226:	0e 94 5c 00 	call	0xb8	; 0xb8 <min>
      PORTC=0b00000111;
 22a:	85 ba       	out	0x15, r8	; 21
           min();
 22c:	0e 94 5c 00 	call	0xb8	; 0xb8 <min>
      PORTC=0b01111111;
 230:	75 ba       	out	0x15, r7	; 21
           min();
 232:	0e 94 5c 00 	call	0xb8	; 0xb8 <min>
      PORTC=0b01101111;
 236:	65 ba       	out	0x15, r6	; 21
           min();
 238:	0e 94 5c 00 	call	0xb8	; 0xb8 <min>
     a++;
 23c:	0f 5f       	subi	r16, 0xFF	; 255
 23e:	1f 4f       	sbci	r17, 0xFF	; 255
     b++;	 	  
	  if(a==6)
 240:	06 30       	cpi	r16, 0x06	; 6
 242:	11 05       	cpc	r17, r1
 244:	09 f0       	breq	.+2      	; 0x248 <main+0x164>
 246:	84 cf       	rjmp	.-248    	; 0x150 <main+0x6c>
 248:	00 e0       	ldi	r16, 0x00	; 0
 24a:	10 e0       	ldi	r17, 0x00	; 0
 24c:	81 cf       	rjmp	.-254    	; 0x150 <main+0x6c>

0000024e <_exit>:
 24e:	f8 94       	cli

00000250 <__stop_program>:
 250:	ff cf       	rjmp	.-2      	; 0x250 <__stop_program>
