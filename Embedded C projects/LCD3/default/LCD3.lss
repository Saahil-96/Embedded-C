
LCD3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000452  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000004a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000076  00000000  00000000  000004c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000009bd  00000000  00000000  0000053c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000136  00000000  00000000  00000ef9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000074e  00000000  00000000  0000102f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000090  00000000  00000000  00001780  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000107  00000000  00000000  00001810  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000003b8  00000000  00000000  00001917  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000090  00000000  00000000  00001ccf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 e6 00 	call	0x1cc	; 0x1cc <main>
  64:	0c 94 27 02 	jmp	0x44e	; 0x44e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <lcd_cmd>:
#define rw 1
#define e 2

void lcd_cmd(unsigned char ch)
{
 unsigned char a = (ch & 0xf0);
  6c:	28 2f       	mov	r18, r24
  6e:	20 7f       	andi	r18, 0xF0	; 240
 lcd = a;
  70:	25 bb       	out	0x15, r18	; 21
 lcd&=~(1<<rs);
  72:	a8 98       	cbi	0x15, 0	; 21
 lcd&=~(1<<rw);
  74:	a9 98       	cbi	0x15, 1	; 21
 lcd|=(1<<e);
  76:	aa 9a       	sbi	0x15, 2	; 21
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  78:	2a ef       	ldi	r18, 0xFA	; 250
  7a:	30 e0       	ldi	r19, 0x00	; 0
  7c:	f9 01       	movw	r30, r18
  7e:	31 97       	sbiw	r30, 0x01	; 1
  80:	f1 f7       	brne	.-4      	; 0x7e <lcd_cmd+0x12>
 _delay_ms(1);
 lcd&=~(1<<e);
  82:	aa 98       	cbi	0x15, 2	; 21
a = (ch<<4)&(0xf0);
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	44 e0       	ldi	r20, 0x04	; 4
  88:	88 0f       	add	r24, r24
  8a:	99 1f       	adc	r25, r25
  8c:	4a 95       	dec	r20
  8e:	e1 f7       	brne	.-8      	; 0x88 <lcd_cmd+0x1c>
 lcd = a;
  90:	85 bb       	out	0x15, r24	; 21
 lcd&=~(1<<rs);
  92:	a8 98       	cbi	0x15, 0	; 21
 lcd&=~(1<<rw);
  94:	a9 98       	cbi	0x15, 1	; 21
 lcd|=(1<<e);
  96:	aa 9a       	sbi	0x15, 2	; 21
  98:	c9 01       	movw	r24, r18
  9a:	01 97       	sbiw	r24, 0x01	; 1
  9c:	f1 f7       	brne	.-4      	; 0x9a <lcd_cmd+0x2e>
 _delay_ms(1);
 lcd&=~(1<<e);
  9e:	aa 98       	cbi	0x15, 2	; 21

}
  a0:	08 95       	ret

000000a2 <lcd_data>:

void lcd_data(unsigned char ch)
{
unsigned char a = (ch & 0xf0);
  a2:	28 2f       	mov	r18, r24
  a4:	20 7f       	andi	r18, 0xF0	; 240
 lcd=a;
  a6:	25 bb       	out	0x15, r18	; 21
 lcd|=(1<<rs);
  a8:	a8 9a       	sbi	0x15, 0	; 21
 lcd&=~(1<<rw);
  aa:	a9 98       	cbi	0x15, 1	; 21
 lcd|=(1<<e);
  ac:	aa 9a       	sbi	0x15, 2	; 21
  ae:	2a ef       	ldi	r18, 0xFA	; 250
  b0:	30 e0       	ldi	r19, 0x00	; 0
  b2:	f9 01       	movw	r30, r18
  b4:	31 97       	sbiw	r30, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <lcd_data+0x12>
 _delay_ms(1);
 lcd&=~(1<<e);
  b8:	aa 98       	cbi	0x15, 2	; 21
a = (ch<<4)&(0xf0);
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	54 e0       	ldi	r21, 0x04	; 4
  be:	88 0f       	add	r24, r24
  c0:	99 1f       	adc	r25, r25
  c2:	5a 95       	dec	r21
  c4:	e1 f7       	brne	.-8      	; 0xbe <lcd_data+0x1c>
 lcd = a;
  c6:	85 bb       	out	0x15, r24	; 21
 lcd|=(1<<rs);
  c8:	a8 9a       	sbi	0x15, 0	; 21
 lcd&=~(1<<rw);
  ca:	a9 98       	cbi	0x15, 1	; 21
 lcd|=(1<<e);
  cc:	aa 9a       	sbi	0x15, 2	; 21
  ce:	c9 01       	movw	r24, r18
  d0:	01 97       	sbiw	r24, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <lcd_data+0x2e>
 _delay_ms(1);
 lcd&=~(1<<e);
  d4:	aa 98       	cbi	0x15, 2	; 21

}
  d6:	08 95       	ret

000000d8 <lcd_init>:

void lcd_init()
{
 lcd_cmd(0x02); //reset
  d8:	82 e0       	ldi	r24, 0x02	; 2
  da:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_cmd(0x28); //4bit mode 
  de:	88 e2       	ldi	r24, 0x28	; 40
  e0:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_cmd(0x0c); //cursor on
  e4:	8c e0       	ldi	r24, 0x0C	; 12
  e6:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_cmd(0x06); //auto increment
  ea:	86 e0       	ldi	r24, 0x06	; 6
  ec:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
}
  f0:	08 95       	ret

000000f2 <lcd_string>:

void lcd_string( unsigned char *str)
{
  f2:	cf 93       	push	r28
  f4:	df 93       	push	r29
  f6:	ec 01       	movw	r28, r24
  f8:	02 c0       	rjmp	.+4      	; 0xfe <lcd_string+0xc>
     int i =0;
     while(str[i]!='\0')
       {
              lcd_data(str[i]);
  fa:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
}

void lcd_string( unsigned char *str)
{
     int i =0;
     while(str[i]!='\0')
  fe:	89 91       	ld	r24, Y+
 100:	88 23       	and	r24, r24
 102:	d9 f7       	brne	.-10     	; 0xfa <lcd_string+0x8>
       {
              lcd_data(str[i]);
              i++;
             
       }
}
 104:	df 91       	pop	r29
 106:	cf 91       	pop	r28
 108:	08 95       	ret

0000010a <lcd_num>:

void lcd_num(unsigned long n)
{
 10a:	ef 92       	push	r14
 10c:	ff 92       	push	r15
 10e:	0f 93       	push	r16
 110:	1f 93       	push	r17
 112:	7b 01       	movw	r14, r22
 114:	8c 01       	movw	r16, r24
  lcd_cmd(0x04);
 116:	84 e0       	ldi	r24, 0x04	; 4
 118:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 11c:	18 c0       	rjmp	.+48     	; 0x14e <lcd_num+0x44>
   while(n>0)
 {
        int a =n%10; 
        lcd_data(a+48);
 11e:	c8 01       	movw	r24, r16
 120:	b7 01       	movw	r22, r14
 122:	2a e0       	ldi	r18, 0x0A	; 10
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	40 e0       	ldi	r20, 0x00	; 0
 128:	50 e0       	ldi	r21, 0x00	; 0
 12a:	0e 94 05 02 	call	0x40a	; 0x40a <__udivmodsi4>
 12e:	86 2f       	mov	r24, r22
 130:	80 5d       	subi	r24, 0xD0	; 208
 132:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
        n=n/10;
 136:	c8 01       	movw	r24, r16
 138:	b7 01       	movw	r22, r14
 13a:	2a e0       	ldi	r18, 0x0A	; 10
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	40 e0       	ldi	r20, 0x00	; 0
 140:	50 e0       	ldi	r21, 0x00	; 0
 142:	0e 94 05 02 	call	0x40a	; 0x40a <__udivmodsi4>
 146:	c9 01       	movw	r24, r18
 148:	da 01       	movw	r26, r20
 14a:	7c 01       	movw	r14, r24
 14c:	8d 01       	movw	r16, r26
}

void lcd_num(unsigned long n)
{
  lcd_cmd(0x04);
   while(n>0)
 14e:	e1 14       	cp	r14, r1
 150:	f1 04       	cpc	r15, r1
 152:	01 05       	cpc	r16, r1
 154:	11 05       	cpc	r17, r1
 156:	19 f7       	brne	.-58     	; 0x11e <lcd_num+0x14>
 {
        int a =n%10; 
        lcd_data(a+48);
        n=n/10;
 }
lcd_cmd(0x06);
 158:	86 e0       	ldi	r24, 0x06	; 6
 15a:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
}
 15e:	1f 91       	pop	r17
 160:	0f 91       	pop	r16
 162:	ff 90       	pop	r15
 164:	ef 90       	pop	r14
 166:	08 95       	ret

00000168 <cuschar1>:
 }
}

void cuschar1()
 {
  lcd_cmd(0x40);
 168:	80 e4       	ldi	r24, 0x40	; 64
 16a:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
  lcd_data(0b00011111);
 16e:	8f e1       	ldi	r24, 0x1F	; 31
 170:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00011111);
 174:	8f e1       	ldi	r24, 0x1F	; 31
 176:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00011111);
 17a:	8f e1       	ldi	r24, 0x1F	; 31
 17c:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00011111);
 180:	8f e1       	ldi	r24, 0x1F	; 31
 182:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00011111);
 186:	8f e1       	ldi	r24, 0x1F	; 31
 188:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00011111);
 18c:	8f e1       	ldi	r24, 0x1F	; 31
 18e:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00011111);
 192:	8f e1       	ldi	r24, 0x1F	; 31
 194:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 }
 198:	08 95       	ret

0000019a <cuschar2>:
 
 void cuschar2()
 {
  lcd_cmd(0x48);
 19a:	88 e4       	ldi	r24, 0x48	; 72
 19c:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
  lcd_data(0b00000000);
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00000000);
 1a6:	80 e0       	ldi	r24, 0x00	; 0
 1a8:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00000000);
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00000000);
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00000000);
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00000000);
 1be:	80 e0       	ldi	r24, 0x00	; 0
 1c0:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
  lcd_data(0b00000000);
 1c4:	80 e0       	ldi	r24, 0x00	; 0
 1c6:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 } 
 1ca:	08 95       	ret

000001cc <main>:
#include<avr/io.h>
#include<util/delay.h>
#include "lcd.h"

void main () 
{
 1cc:	ef 92       	push	r14
 1ce:	ff 92       	push	r15
 1d0:	0f 93       	push	r16
 1d2:	1f 93       	push	r17
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 DDRC=0xff;
 1d8:	8f ef       	ldi	r24, 0xFF	; 255
 1da:	84 bb       	out	0x14, r24	; 20
 DDRB=0xff;
 1dc:	87 bb       	out	0x17, r24	; 23
 lcd_init();
 1de:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcd_init>
 cuschar2();
 1e2:	0e 94 cd 00 	call	0x19a	; 0x19a <cuschar2>
 cuschar1();
 1e6:	0e 94 b4 00 	call	0x168	; 0x168 <cuschar1>
 lcd_cmd(0x01);
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 1f0:	84 ec       	ldi	r24, 0xC4	; 196
 1f2:	99 e0       	ldi	r25, 0x09	; 9
 1f4:	01 97       	sbiw	r24, 0x01	; 1
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <main+0x28>
 _delay_ms(10);
 while (1)
{       
 PORTB=0b10101010;
 1f8:	7a ea       	ldi	r23, 0xAA	; 170
 1fa:	e7 2e       	mov	r14, r23
 1fc:	00 e5       	ldi	r16, 0x50	; 80
 1fe:	13 ec       	ldi	r17, 0xC3	; 195
 lcd_data(0);
 _delay_ms(200);
 lcd_cmd(0x01);
 _delay_ms(10);
  
 PORTB=~(0b10101010);
 200:	c4 ec       	ldi	r28, 0xC4	; 196
 202:	d9 e0       	ldi	r29, 0x09	; 9
 204:	65 e5       	ldi	r22, 0x55	; 85
 206:	f6 2e       	mov	r15, r22
 cuschar1();
 lcd_cmd(0x01);
 _delay_ms(10);
 while (1)
{       
 PORTB=0b10101010;
 208:	e8 ba       	out	0x18, r14	; 24
 lcd_cmd(0x80);
 20a:	80 e8       	ldi	r24, 0x80	; 128
 20c:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(0);
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 216:	c8 01       	movw	r24, r16
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	f1 f7       	brne	.-4      	; 0x218 <main+0x4c>
 _delay_ms(200);
 lcd_cmd(0x01);
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 222:	ce 01       	movw	r24, r28
 224:	01 97       	sbiw	r24, 0x01	; 1
 226:	f1 f7       	brne	.-4      	; 0x224 <main+0x58>
 _delay_ms(10);
  
 PORTB=~(0b10101010);
 228:	f8 ba       	out	0x18, r15	; 24
 lcd_cmd(0x81);
 22a:	81 e8       	ldi	r24, 0x81	; 129
 22c:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(1);
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 236:	c8 01       	movw	r24, r16
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <main+0x6c>
 _delay_ms(200);
 lcd_cmd(0x01);  
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 242:	ce 01       	movw	r24, r28
 244:	01 97       	sbiw	r24, 0x01	; 1
 246:	f1 f7       	brne	.-4      	; 0x244 <main+0x78>
 _delay_ms(10);

 PORTB=0b10101010;
 248:	e8 ba       	out	0x18, r14	; 24
 lcd_cmd(0x82);
 24a:	82 e8       	ldi	r24, 0x82	; 130
 24c:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(0);
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 256:	c8 01       	movw	r24, r16
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <main+0x8c>
 _delay_ms(200);
 lcd_cmd(0x01);  
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 262:	ce 01       	movw	r24, r28
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	f1 f7       	brne	.-4      	; 0x264 <main+0x98>
 _delay_ms(10);

 PORTB=~(0b10101010);
 268:	f8 ba       	out	0x18, r15	; 24
 lcd_cmd(0x83);
 26a:	83 e8       	ldi	r24, 0x83	; 131
 26c:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(1);
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 276:	c8 01       	movw	r24, r16
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <main+0xac>
 _delay_ms(200);
 lcd_cmd(0x01);  
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 282:	ce 01       	movw	r24, r28
 284:	01 97       	sbiw	r24, 0x01	; 1
 286:	f1 f7       	brne	.-4      	; 0x284 <main+0xb8>
 _delay_ms(10);

 PORTB=0b10101010;
 288:	e8 ba       	out	0x18, r14	; 24
 lcd_cmd(0x84);
 28a:	84 e8       	ldi	r24, 0x84	; 132
 28c:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(0);
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 296:	c8 01       	movw	r24, r16
 298:	01 97       	sbiw	r24, 0x01	; 1
 29a:	f1 f7       	brne	.-4      	; 0x298 <main+0xcc>
 _delay_ms(200);
 lcd_cmd(0x01);  
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 2a2:	ce 01       	movw	r24, r28
 2a4:	01 97       	sbiw	r24, 0x01	; 1
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <main+0xd8>
 _delay_ms(10);

 PORTB=~(0b10101010);
 2a8:	f8 ba       	out	0x18, r15	; 24
 lcd_cmd(0x85);
 2aa:	85 e8       	ldi	r24, 0x85	; 133
 2ac:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(1);
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 2b6:	c8 01       	movw	r24, r16
 2b8:	01 97       	sbiw	r24, 0x01	; 1
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <main+0xec>
 _delay_ms(200);
 lcd_cmd(0x01);  
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 2c2:	ce 01       	movw	r24, r28
 2c4:	01 97       	sbiw	r24, 0x01	; 1
 2c6:	f1 f7       	brne	.-4      	; 0x2c4 <main+0xf8>
 _delay_ms(10);

 PORTB=0b10101010;
 2c8:	e8 ba       	out	0x18, r14	; 24
 lcd_cmd(0x86);
 2ca:	86 e8       	ldi	r24, 0x86	; 134
 2cc:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(0);
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 2d6:	c8 01       	movw	r24, r16
 2d8:	01 97       	sbiw	r24, 0x01	; 1
 2da:	f1 f7       	brne	.-4      	; 0x2d8 <main+0x10c>
 _delay_ms(200);
 lcd_cmd(0x01); 
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 2e2:	ce 01       	movw	r24, r28
 2e4:	01 97       	sbiw	r24, 0x01	; 1
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <main+0x118>
 _delay_ms(10);
 
 PORTB=~(0b10101010);
 2e8:	f8 ba       	out	0x18, r15	; 24
 lcd_cmd(0x87);
 2ea:	87 e8       	ldi	r24, 0x87	; 135
 2ec:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(1);
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 2f6:	c8 01       	movw	r24, r16
 2f8:	01 97       	sbiw	r24, 0x01	; 1
 2fa:	f1 f7       	brne	.-4      	; 0x2f8 <main+0x12c>
 _delay_ms(200);
 lcd_cmd(0x01);  
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 302:	ce 01       	movw	r24, r28
 304:	01 97       	sbiw	r24, 0x01	; 1
 306:	f1 f7       	brne	.-4      	; 0x304 <main+0x138>
 _delay_ms(10);

 PORTB=0b10101010;
 308:	e8 ba       	out	0x18, r14	; 24
 lcd_cmd(0x88);
 30a:	88 e8       	ldi	r24, 0x88	; 136
 30c:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(0);
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 316:	c8 01       	movw	r24, r16
 318:	01 97       	sbiw	r24, 0x01	; 1
 31a:	f1 f7       	brne	.-4      	; 0x318 <main+0x14c>
 _delay_ms(200);
 lcd_cmd(0x01);  
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 322:	ce 01       	movw	r24, r28
 324:	01 97       	sbiw	r24, 0x01	; 1
 326:	f1 f7       	brne	.-4      	; 0x324 <main+0x158>
 _delay_ms(10);
                  
 PORTB=~(0b10101010);
 328:	f8 ba       	out	0x18, r15	; 24
 lcd_cmd(0x89);
 32a:	89 e8       	ldi	r24, 0x89	; 137
 32c:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(1);
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 336:	c8 01       	movw	r24, r16
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <main+0x16c>
 _delay_ms(200);
 lcd_cmd(0x01);  
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 342:	ce 01       	movw	r24, r28
 344:	01 97       	sbiw	r24, 0x01	; 1
 346:	f1 f7       	brne	.-4      	; 0x344 <main+0x178>
 _delay_ms(10);
                   
 PORTB=0b10101010;
 348:	e8 ba       	out	0x18, r14	; 24
 lcd_cmd(0x8A);
 34a:	8a e8       	ldi	r24, 0x8A	; 138
 34c:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(0);
 350:	80 e0       	ldi	r24, 0x00	; 0
 352:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 356:	c8 01       	movw	r24, r16
 358:	01 97       	sbiw	r24, 0x01	; 1
 35a:	f1 f7       	brne	.-4      	; 0x358 <main+0x18c>
 _delay_ms(200);
 lcd_cmd(0x01);  
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 362:	ce 01       	movw	r24, r28
 364:	01 97       	sbiw	r24, 0x01	; 1
 366:	f1 f7       	brne	.-4      	; 0x364 <main+0x198>
 _delay_ms(10);
                   
 PORTB=~(0b10101010);
 368:	f8 ba       	out	0x18, r15	; 24
 lcd_cmd(0x8B);
 36a:	8b e8       	ldi	r24, 0x8B	; 139
 36c:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(1);
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 376:	c8 01       	movw	r24, r16
 378:	01 97       	sbiw	r24, 0x01	; 1
 37a:	f1 f7       	brne	.-4      	; 0x378 <main+0x1ac>
 _delay_ms(200);
 lcd_cmd(0x01);  
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 382:	ce 01       	movw	r24, r28
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	f1 f7       	brne	.-4      	; 0x384 <main+0x1b8>
 _delay_ms(10);
                   
 PORTB=0b10101010;
 388:	e8 ba       	out	0x18, r14	; 24
 lcd_cmd(0x8C);
 38a:	8c e8       	ldi	r24, 0x8C	; 140
 38c:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(0);
 390:	80 e0       	ldi	r24, 0x00	; 0
 392:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 396:	c8 01       	movw	r24, r16
 398:	01 97       	sbiw	r24, 0x01	; 1
 39a:	f1 f7       	brne	.-4      	; 0x398 <main+0x1cc>
 _delay_ms(200);
 lcd_cmd(0x01);  
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 3a2:	ce 01       	movw	r24, r28
 3a4:	01 97       	sbiw	r24, 0x01	; 1
 3a6:	f1 f7       	brne	.-4      	; 0x3a4 <main+0x1d8>
 _delay_ms(10);
                   
 PORTB=~(0b10101010);
 3a8:	f8 ba       	out	0x18, r15	; 24
 lcd_cmd(0x8D);
 3aa:	8d e8       	ldi	r24, 0x8D	; 141
 3ac:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(1);
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 3b6:	c8 01       	movw	r24, r16
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <main+0x1ec>
 _delay_ms(200);
 lcd_cmd(0x01);  
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 3c2:	ce 01       	movw	r24, r28
 3c4:	01 97       	sbiw	r24, 0x01	; 1
 3c6:	f1 f7       	brne	.-4      	; 0x3c4 <main+0x1f8>
 _delay_ms(10);
                   
 PORTB=0b10101010;
 3c8:	e8 ba       	out	0x18, r14	; 24
 lcd_cmd(0x8E);
 3ca:	8e e8       	ldi	r24, 0x8E	; 142
 3cc:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(0);
 3d0:	80 e0       	ldi	r24, 0x00	; 0
 3d2:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 3d6:	c8 01       	movw	r24, r16
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <main+0x20c>
 _delay_ms(200);
 lcd_cmd(0x01);  
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 3e2:	ce 01       	movw	r24, r28
 3e4:	01 97       	sbiw	r24, 0x01	; 1
 3e6:	f1 f7       	brne	.-4      	; 0x3e4 <main+0x218>
 _delay_ms(10);
                   
 PORTB=~(0b10101010);
 3e8:	f8 ba       	out	0x18, r15	; 24
 lcd_cmd(0x8F);
 3ea:	8f e8       	ldi	r24, 0x8F	; 143
 3ec:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 lcd_data(1);
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	0e 94 51 00 	call	0xa2	; 0xa2 <lcd_data>
 3f6:	c8 01       	movw	r24, r16
 3f8:	01 97       	sbiw	r24, 0x01	; 1
 3fa:	f1 f7       	brne	.-4      	; 0x3f8 <main+0x22c>
 _delay_ms(200);
 lcd_cmd(0x01);  
 3fc:	81 e0       	ldi	r24, 0x01	; 1
 3fe:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_cmd>
 402:	ce 01       	movw	r24, r28
 404:	01 97       	sbiw	r24, 0x01	; 1
 406:	f1 f7       	brne	.-4      	; 0x404 <main+0x238>
 408:	ff ce       	rjmp	.-514    	; 0x208 <main+0x3c>

0000040a <__udivmodsi4>:
 40a:	a1 e2       	ldi	r26, 0x21	; 33
 40c:	1a 2e       	mov	r1, r26
 40e:	aa 1b       	sub	r26, r26
 410:	bb 1b       	sub	r27, r27
 412:	fd 01       	movw	r30, r26
 414:	0d c0       	rjmp	.+26     	; 0x430 <__udivmodsi4_ep>

00000416 <__udivmodsi4_loop>:
 416:	aa 1f       	adc	r26, r26
 418:	bb 1f       	adc	r27, r27
 41a:	ee 1f       	adc	r30, r30
 41c:	ff 1f       	adc	r31, r31
 41e:	a2 17       	cp	r26, r18
 420:	b3 07       	cpc	r27, r19
 422:	e4 07       	cpc	r30, r20
 424:	f5 07       	cpc	r31, r21
 426:	20 f0       	brcs	.+8      	; 0x430 <__udivmodsi4_ep>
 428:	a2 1b       	sub	r26, r18
 42a:	b3 0b       	sbc	r27, r19
 42c:	e4 0b       	sbc	r30, r20
 42e:	f5 0b       	sbc	r31, r21

00000430 <__udivmodsi4_ep>:
 430:	66 1f       	adc	r22, r22
 432:	77 1f       	adc	r23, r23
 434:	88 1f       	adc	r24, r24
 436:	99 1f       	adc	r25, r25
 438:	1a 94       	dec	r1
 43a:	69 f7       	brne	.-38     	; 0x416 <__udivmodsi4_loop>
 43c:	60 95       	com	r22
 43e:	70 95       	com	r23
 440:	80 95       	com	r24
 442:	90 95       	com	r25
 444:	9b 01       	movw	r18, r22
 446:	ac 01       	movw	r20, r24
 448:	bd 01       	movw	r22, r26
 44a:	cf 01       	movw	r24, r30
 44c:	08 95       	ret

0000044e <_exit>:
 44e:	f8 94       	cli

00000450 <__stop_program>:
 450:	ff cf       	rjmp	.-2      	; 0x450 <__stop_program>
